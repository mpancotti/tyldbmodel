/**
 * This class is generated by jOOQ
 */
package org.tylproject.db.public_.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BasCountryDao extends org.jooq.impl.DAOImpl<org.tylproject.db.public_.tables.records.BasCountryRecord, org.tylproject.db.public_.tables.pojos.BasCountry, java.lang.String> {

	/**
	 * Create a new BasCountryDao without any configuration
	 */
	public BasCountryDao() {
		super(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY, org.tylproject.db.public_.tables.pojos.BasCountry.class);
	}

	/**
	 * Create a new BasCountryDao with an attached configuration
	 */
	public BasCountryDao(org.jooq.Configuration configuration) {
		super(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY, org.tylproject.db.public_.tables.pojos.BasCountry.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.String getId(org.tylproject.db.public_.tables.pojos.BasCountry object) {
		return object.getIdBasCountry();
	}

	/**
	 * Fetch records that have <code>id_bas_country IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByIdBasCountry(java.lang.String... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.ID_BAS_COUNTRY, values);
	}

	/**
	 * Fetch a unique record that has <code>id_bas_country = value</code>
	 */
	public org.tylproject.db.public_.tables.pojos.BasCountry fetchOneByIdBasCountry(java.lang.String value) {
		return fetchOne(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.ID_BAS_COUNTRY, value);
	}

	/**
	 * Fetch records that have <code>official_name IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByOfficialName(java.lang.String... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.OFFICIAL_NAME, values);
	}

	/**
	 * Fetch records that have <code>two_chars_code IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByTwoCharsCode(java.lang.String... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.TWO_CHARS_CODE, values);
	}

	/**
	 * Fetch records that have <code>numeric_code IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByNumericCode(java.lang.Integer... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.NUMERIC_CODE, values);
	}

	/**
	 * Fetch records that have <code>canceled IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByCanceled(java.lang.Boolean... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.CANCELED, values);
	}

	/**
	 * Fetch records that have <code>version IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByVersion(java.lang.Integer... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.VERSION, values);
	}

	/**
	 * Fetch records that have <code>track IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.BasCountry> fetchByTrack(org.tylproject.db.public_.udt.records.TrackRecord... values) {
		return fetch(org.tylproject.db.public_.tables.BasCountry.BAS_COUNTRY.TRACK, values);
	}
}
