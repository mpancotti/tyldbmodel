/**
 * This class is generated by jOOQ
 */
package org.tylproject.db.public_.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AutUserDao extends org.jooq.impl.DAOImpl<org.tylproject.db.public_.tables.records.AutUserRecord, org.tylproject.db.public_.tables.pojos.AutUser, java.lang.String> {

	/**
	 * Create a new AutUserDao without any configuration
	 */
	public AutUserDao() {
		super(org.tylproject.db.public_.tables.AutUser.AUT_USER, org.tylproject.db.public_.tables.pojos.AutUser.class);
	}

	/**
	 * Create a new AutUserDao with an attached configuration
	 */
	public AutUserDao(org.jooq.Configuration configuration) {
		super(org.tylproject.db.public_.tables.AutUser.AUT_USER, org.tylproject.db.public_.tables.pojos.AutUser.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.String getId(org.tylproject.db.public_.tables.pojos.AutUser object) {
		return object.getLogin();
	}

	/**
	 * Fetch records that have <code>login IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByLogin(java.lang.String... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.LOGIN, values);
	}

	/**
	 * Fetch a unique record that has <code>login = value</code>
	 */
	public org.tylproject.db.public_.tables.pojos.AutUser fetchOneByLogin(java.lang.String value) {
		return fetchOne(org.tylproject.db.public_.tables.AutUser.AUT_USER.LOGIN, value);
	}

	/**
	 * Fetch records that have <code>password IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByPassword(java.lang.String... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.PASSWORD, values);
	}

	/**
	 * Fetch records that have <code>password_hint IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByPasswordHint(java.lang.String... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.PASSWORD_HINT, values);
	}

	/**
	 * Fetch records that have <code>valid_thru IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByValidThru(java.sql.Timestamp... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.VALID_THRU, values);
	}

	/**
	 * Fetch records that have <code>validity_managed IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByValidityManaged(java.lang.Boolean... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.VALIDITY_MANAGED, values);
	}

	/**
	 * Fetch records that have <code>id_par_party IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByIdParParty(java.lang.Integer... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.ID_PAR_PARTY, values);
	}

	/**
	 * Fetch records that have <code>canceled IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByCanceled(java.lang.Boolean... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.CANCELED, values);
	}

	/**
	 * Fetch records that have <code>version IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByVersion(java.lang.Integer... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.VERSION, values);
	}

	/**
	 * Fetch records that have <code>track IN (values)</code>
	 */
	public java.util.List<org.tylproject.db.public_.tables.pojos.AutUser> fetchByTrack(org.tylproject.db.public_.udt.records.TrackRecord... values) {
		return fetch(org.tylproject.db.public_.tables.AutUser.AUT_USER.TRACK, values);
	}
}
