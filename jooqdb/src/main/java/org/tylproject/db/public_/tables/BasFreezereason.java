/**
 * This class is generated by jOOQ
 */
package org.tylproject.db.public_.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BasFreezereason extends org.jooq.impl.TableImpl<org.tylproject.db.public_.tables.records.BasFreezereasonRecord> {

	private static final long serialVersionUID = -1206555910;

	/**
	 * The singleton instance of <code>public.bas_freezereason</code>
	 */
	public static final org.tylproject.db.public_.tables.BasFreezereason BAS_FREEZEREASON = new org.tylproject.db.public_.tables.BasFreezereason();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.tylproject.db.public_.tables.records.BasFreezereasonRecord> getRecordType() {
		return org.tylproject.db.public_.tables.records.BasFreezereasonRecord.class;
	}

	/**
	 * The column <code>public.bas_freezereason.id_freezereason</code>.
	 */
	public final org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, java.lang.String> ID_FREEZEREASON = createField("id_freezereason", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>public.bas_freezereason.discriminator</code>.
	 */
	public final org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, java.lang.String> DISCRIMINATOR = createField("discriminator", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

	/**
	 * The column <code>public.bas_freezereason.description</code>.
	 */
	public final org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.bas_freezereason.canceled</code>.
	 */
	public final org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, java.lang.Boolean> CANCELED = createField("canceled", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "");

	/**
	 * The column <code>public.bas_freezereason.version</code>.
	 */
	public final org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, java.lang.Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.bas_freezereason.track</code>.
	 */
	public final org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, org.tylproject.db.public_.udt.records.TrackRecord> TRACK = createField("track", org.tylproject.db.public_.udt.Track.TRACK.getDataType(), this, "");

	/**
	 * Create a <code>public.bas_freezereason</code> table reference
	 */
	public BasFreezereason() {
		this("bas_freezereason", null);
	}

	/**
	 * Create an aliased <code>public.bas_freezereason</code> table reference
	 */
	public BasFreezereason(java.lang.String alias) {
		this(alias, org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON);
	}

	private BasFreezereason(java.lang.String alias, org.jooq.Table<org.tylproject.db.public_.tables.records.BasFreezereasonRecord> aliased) {
		this(alias, aliased, null);
	}

	private BasFreezereason(java.lang.String alias, org.jooq.Table<org.tylproject.db.public_.tables.records.BasFreezereasonRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.tylproject.db.public_.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.tylproject.db.public_.tables.records.BasFreezereasonRecord> getPrimaryKey() {
		return org.tylproject.db.public_.Keys.BAS_FREEZEREASON_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.tylproject.db.public_.tables.records.BasFreezereasonRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.tylproject.db.public_.tables.records.BasFreezereasonRecord>>asList(org.tylproject.db.public_.Keys.BAS_FREEZEREASON_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.TableField<org.tylproject.db.public_.tables.records.BasFreezereasonRecord, java.lang.Integer> getRecordVersion() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.tylproject.db.public_.tables.BasFreezereason as(java.lang.String alias) {
		return new org.tylproject.db.public_.tables.BasFreezereason(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.tylproject.db.public_.tables.BasFreezereason rename(java.lang.String name) {
		return new org.tylproject.db.public_.tables.BasFreezereason(name, null);
	}
}
