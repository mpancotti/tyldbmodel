/**
 * This class is generated by jOOQ
 */
package org.tylproject.db.public_.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BasFreezereasonRecord extends org.jooq.impl.UpdatableRecordImpl<org.tylproject.db.public_.tables.records.BasFreezereasonRecord> implements org.jooq.Record8<java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.Boolean, java.lang.Integer> {

	private static final long serialVersionUID = 584197013;

	/**
	 * Setter for <code>public.bas_freezereason.id_freezereason</code>.
	 */
	public BasFreezereasonRecord setIdFreezereason(java.lang.String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.id_freezereason</code>.
	 */
	public java.lang.String getIdFreezereason() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>public.bas_freezereason.discriminator</code>.
	 */
	public BasFreezereasonRecord setDiscriminator(java.lang.String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.discriminator</code>.
	 */
	public java.lang.String getDiscriminator() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>public.bas_freezereason.created_on</code>.
	 */
	public BasFreezereasonRecord setCreatedOn(java.sql.Timestamp value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.created_on</code>.
	 */
	public java.sql.Timestamp getCreatedOn() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>public.bas_freezereason.created_by</code>.
	 */
	public BasFreezereasonRecord setCreatedBy(java.lang.String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.created_by</code>.
	 */
	public java.lang.String getCreatedBy() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>public.bas_freezereason.updated_on</code>.
	 */
	public BasFreezereasonRecord setUpdatedOn(java.sql.Timestamp value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.updated_on</code>.
	 */
	public java.sql.Timestamp getUpdatedOn() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>public.bas_freezereason.updated_by</code>.
	 */
	public BasFreezereasonRecord setUpdatedBy(java.lang.String value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.updated_by</code>.
	 */
	public java.lang.String getUpdatedBy() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>public.bas_freezereason.canceled</code>.
	 */
	public BasFreezereasonRecord setCanceled(java.lang.Boolean value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.canceled</code>.
	 */
	public java.lang.Boolean getCanceled() {
		return (java.lang.Boolean) getValue(6);
	}

	/**
	 * Setter for <code>public.bas_freezereason.version</code>.
	 */
	public BasFreezereasonRecord setVersion(java.lang.Integer value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>public.bas_freezereason.version</code>.
	 */
	public java.lang.Integer getVersion() {
		return (java.lang.Integer) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.Boolean, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.Boolean, java.lang.Integer> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.ID_FREEZEREASON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.DISCRIMINATOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.CREATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.CREATED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.UPDATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.UPDATED_BY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field7() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.CANCELED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getIdFreezereason();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getDiscriminator();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getCreatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getCreatedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getUpdatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getUpdatedBy();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value7() {
		return getCanceled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value1(java.lang.String value) {
		setIdFreezereason(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value2(java.lang.String value) {
		setDiscriminator(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value3(java.sql.Timestamp value) {
		setCreatedOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value4(java.lang.String value) {
		setCreatedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value5(java.sql.Timestamp value) {
		setUpdatedOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value6(java.lang.String value) {
		setUpdatedBy(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value7(java.lang.Boolean value) {
		setCanceled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord value8(java.lang.Integer value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasFreezereasonRecord values(java.lang.String value1, java.lang.String value2, java.sql.Timestamp value3, java.lang.String value4, java.sql.Timestamp value5, java.lang.String value6, java.lang.Boolean value7, java.lang.Integer value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BasFreezereasonRecord
	 */
	public BasFreezereasonRecord() {
		super(org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON);
	}

	/**
	 * Create a detached, initialised BasFreezereasonRecord
	 */
	public BasFreezereasonRecord(java.lang.String idFreezereason, java.lang.String discriminator, java.sql.Timestamp createdOn, java.lang.String createdBy, java.sql.Timestamp updatedOn, java.lang.String updatedBy, java.lang.Boolean canceled, java.lang.Integer version) {
		super(org.tylproject.db.public_.tables.BasFreezereason.BAS_FREEZEREASON);

		setValue(0, idFreezereason);
		setValue(1, discriminator);
		setValue(2, createdOn);
		setValue(3, createdBy);
		setValue(4, updatedOn);
		setValue(5, updatedBy);
		setValue(6, canceled);
		setValue(7, version);
	}
}
