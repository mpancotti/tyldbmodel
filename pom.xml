<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.tylproject</groupId>
    <artifactId>dbmodel</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>jooqdb</module>
        <module>repo</module>
    </modules>
    <packaging>pom</packaging>

    <name>dbmodel</name>
    <url>http://www.tyl-project.org</url>
    <repositories>
    <repository>
        <id>postgres</id>
        <name>Postgresql new repository</name>
        <url>https://oss.sonatype.org/content/repositories/releases/</url>
    </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
        <build.profile.id>dev</build.profile.id>
        <profiles.dir>profiles</profiles.dir>
    </properties>
    <profiles>
        <profile>
            <id>dev</id>
            <!-- Dev profile is active by default -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                    Specifies the build profile id, which is used to find out the correct properties file.
                    This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <build.profile.id>dev</build.profile.id>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile specific
                        configuration. In this case, the configuration file is searched
                        from profiles/dev/ directory.
                    -->
                    <filter>${profiles.dir}/${build.profile.id}/config.properties</filter>
                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>

            </build>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <!--
                    Specifies the build profile id, which is used to find out the correct properties file.
                    This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <build.profile.id>test</build.profile.id>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile specific
                        configuration. In this case, the configuration file is searched
                        from profiles/test/ directory.
                    -->
                    <filter>${profiles.dir}/${build.profile.id}/config.properties</filter>
                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!--
                    Specifies the build profile id, which is used to find out the correct properties file.
                    This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <build.profile.id>prod</build.profile.id>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile
                        specific configuration. In this case, the configuration file is searched
                        from profiles/prod/ directory.
                    -->
                    <filter>${profiles.dir}/${build.profile.id}/config.properties</filter>
                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${profiles.dir}/${build.profile.id}/config.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
